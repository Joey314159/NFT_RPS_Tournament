{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Developer/RockPaperScissorEmulator/client/src/components/GetNFTOwnerButton.jsx\";\nimport React from \"react\";\nimport { getNFTOwner } from \"../utils/contractServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  backgroundColor: 'rgb(153, 153, 153)',\n  color: 'black',\n  padding: '20px 40px',\n  borderRadius: '5px',\n  border: '2px',\n  marginRight: '100px'\n};\nlet tokenId;\nfunction getNFTOwnerButton() {\n  const getNFTOwnerG = async tokenId => {\n    try {\n      await getNFTOwner(tokenId);\n    } catch (error) {\n      console.error(\"Can not retrieve owner of this nft\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"tokenId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles,\n      onClick: getNFTOwnerG(tokenId),\n      children: \"Get NFT Owner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\nexport default getNFTOwnerButton;","map":{"version":3,"names":["React","getNFTOwner","jsxDEV","_jsxDEV","styles","backgroundColor","color","padding","borderRadius","border","marginRight","tokenId","getNFTOwnerButton","getNFTOwnerG","error","console","children","type","name","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick"],"sources":["/Users/ray/Developer/RockPaperScissorEmulator/client/src/components/GetNFTOwnerButton.jsx"],"sourcesContent":["import React from \"react\";\nimport { getNFTOwner } from \"../utils/contractServices\";\n\nconst styles = {\n    backgroundColor: 'rgb(153, 153, 153)',\n    color: 'black',\n    padding: '20px 40px',\n    borderRadius: '5px',\n    border: '2px',\n    marginRight: '100px'\n};\n\nlet tokenId;\n\nfunction getNFTOwnerButton() {\n    const getNFTOwnerG = async (tokenId) => {\n        try {\n            await getNFTOwner(tokenId);\n        }\n        catch (error) {\n            console.error(\"Can not retrieve owner of this nft\", error);\n        }\n    }\n\n    return (<div>\n        <input type=\"text\" name=\"tokenId\"></input>\n        <button style={styles} onClick={getNFTOwnerG(tokenId)}>Get NFT Owner</button>\n        </div>);\n}\n\nexport default getNFTOwnerButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,MAAM,GAAG;EACXC,eAAe,EAAE,oBAAoB;EACrCC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,WAAW;EACpBC,YAAY,EAAE,KAAK;EACnBC,MAAM,EAAE,KAAK;EACbC,WAAW,EAAE;AACjB,CAAC;AAED,IAAIC,OAAO;AAEX,SAASC,iBAAiBA,CAAA,EAAG;EACzB,MAAMC,YAAY,GAAG,MAAOF,OAAO,IAAK;IACpC,IAAI;MACA,MAAMV,WAAW,CAACU,OAAO,CAAC;IAC9B,CAAC,CACD,OAAOG,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC9D;EACJ,CAAC;EAED,oBAAQX,OAAA;IAAAa,QAAA,gBACJb,OAAA;MAAOc,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CnB,OAAA;MAAQoB,KAAK,EAAEnB,MAAO;MAACoB,OAAO,EAAEX,YAAY,CAACF,OAAO,CAAE;MAAAK,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AACd;AAEA,eAAeV,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
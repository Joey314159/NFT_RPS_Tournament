{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Developer/RockPaperScissorEmulator/client/src/components/GetWInnerButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getWinner } from \"../utils/contractServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet winner;\nconst styles = {\n  backgroundColor: 'rgb(153, 153, 153)',\n  color: 'black',\n  padding: '20px 40px',\n  borderRadius: '5px',\n  border: '2px',\n  marginRight: '100px'\n};\nfunction GetWinnerButton() {\n  _s();\n  // const GetWinnerGame = async () => {\n  // try {\n  const [winner, setWinner] = useState(\"0x00000\");\n  useEffect(() => {\n    const fetchWinner = async () => {\n      const winnerG = await getWinner();\n      setWinner(winnerG);\n      console.log(winnerG);\n    };\n    // fetchWinner();\n  }, []);\n  // }\n  // catch (error) {\n  //     console.error(\"Winner can't be retrieved...\",error);    \n  // }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles,\n        onClick: getWinner(),\n        children: \"Find out the winner!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Winner: \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(GetWinnerButton, \"NtMn35f3UkWj4cqoe8U05Mun1KI=\");\n_c = GetWinnerButton;\nexport default GetWinnerButton;\nvar _c;\n$RefreshReg$(_c, \"GetWinnerButton\");","map":{"version":3,"names":["React","useEffect","useState","getWinner","jsxDEV","_jsxDEV","winner","styles","backgroundColor","color","padding","borderRadius","border","marginRight","GetWinnerButton","_s","setWinner","fetchWinner","winnerG","console","log","children","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ray/Developer/RockPaperScissorEmulator/client/src/components/GetWInnerButton.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getWinner } from \"../utils/contractServices\";\nlet winner;\nconst styles = {\n    backgroundColor: 'rgb(153, 153, 153)',\n    color: 'black',\n    padding: '20px 40px',\n    borderRadius: '5px',\n    border: '2px',\n    marginRight: '100px'\n};\nfunction GetWinnerButton() {\n    // const GetWinnerGame = async () => {\n        // try {\n            const [winner, setWinner] = useState(\"0x00000\");\n\n            useEffect(() => {\n                const fetchWinner = async () => {\n                    const winnerG = await getWinner();\n                    setWinner(winnerG);\n                    console.log(winnerG);\n                };\n                // fetchWinner();\n            }, []);\n        // }\n        // catch (error) {\n        //     console.error(\"Winner can't be retrieved...\",error);    \n        // }\n    // };\n    \n\n\n    return(\n    <div>\n        <div>\n            <button style={styles} onClick={getWinner()}>Find out the winner!</button>\n            <br></br>   \n            <h1>Winner: {winner}</h1>\n        </div>\n    </div>\n    );\n}\n\n\nexport default GetWinnerButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtD,IAAIC,MAAM;AACV,MAAMC,MAAM,GAAG;EACXC,eAAe,EAAE,oBAAoB;EACrCC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,WAAW;EACpBC,YAAY,EAAE,KAAK;EACnBC,MAAM,EAAE,KAAK;EACbC,WAAW,EAAE;AACjB,CAAC;AACD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACI;EACI,MAAM,CAACT,MAAM,EAAEU,SAAS,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAG,MAAMf,SAAS,CAAC,CAAC;MACjCa,SAAS,CAACE,OAAO,CAAC;MAClBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACxB,CAAC;IACD;EACJ,CAAC,EAAE,EAAE,CAAC;EACV;EACA;EACA;EACA;EACJ;;EAIA,oBACAb,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAQiB,KAAK,EAAEf,MAAO;QAACgB,OAAO,EAAEpB,SAAS,CAAC,CAAE;QAAAkB,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1EtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtB,OAAA;QAAAgB,QAAA,GAAI,UAAQ,EAACf,MAAM;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACZ,EAAA,CA9BQD,eAAe;AAAAc,EAAA,GAAfd,eAAe;AAiCxB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
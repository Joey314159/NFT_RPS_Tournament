/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Tourney, TourneyInterface } from "../Tourney";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ad1",
        type: "address",
      },
      {
        internalType: "address",
        name: "ad2",
        type: "address",
      },
      {
        internalType: "address",
        name: "ad3",
        type: "address",
      },
      {
        internalType: "address",
        name: "ad4",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "gameStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getResults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        internalType: "address",
        name: "playerB",
        type: "address",
      },
    ],
    name: "judge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rolls",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e2638038062000e268339818101604052810190620000379190620001ae565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000220565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001768262000149565b9050919050565b620001888162000169565b81146200019457600080fd5b50565b600081519050620001a8816200017d565b92915050565b60008060008060808587031215620001cb57620001ca62000144565b5b6000620001db8782880162000197565b9450506020620001ee8782880162000197565b9350506040620002018782880162000197565b9250506060620002148782880162000197565b91505092959194509250565b610bf680620002306000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633218b99d1461006757806350bc4a9814610071578063a2fb1175146100a1578063a73a8b4c146100d1578063cd5e3c5d14610101578063fe6ebce61461011f575b600080fd5b61006f61014f565b005b61008b6004803603810190610086919061096e565b6104a5565b60405161009891906109b4565b60405180910390f35b6100bb60048036038101906100b691906109fb565b6104ee565b6040516100c89190610a37565b60405180910390f35b6100eb60048036038101906100e6919061096e565b610524565b6040516100f891906109b4565b60405180910390f35b61010961053c565b60405161011691906109b4565b60405180910390f35b61013960048036038101906101349190610a52565b610579565b6040516101469190610a37565b60405180910390f35b6003600161015b61053c565b6101659190610ac1565b61016f9190610b24565b600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360026101df61053c565b6101e99190610ac1565b6101f39190610b24565b60046000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506102a460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610579565b60056000600281106102b9576102b8610b55565b5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038061030361053c565b61030d9190610ac1565b6103179190610b24565b60046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600461038861053c565b6103929190610ac1565b61039c9190610b24565b60046000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061044f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610579565b600560016002811061046457610463610b55565b5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600581600281106104fe57600080fd5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60006003426040516020016105519190610ba5565b6040516020818303038152906040528051906020012060001c6105749190610b24565b905090565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008203610707576001810361061c578392505050610905565b6002810361062e578492505050610905565b6003600161063a61053c565b6106449190610ac1565b61064e9190610b24565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600261069d61053c565b6106a79190610ac1565b6106b19190610b24565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106fe8585610579565b92505050610905565b6001820361080c5760008103610721578492505050610905565b60028103610733578392505050610905565b6003600161073f61053c565b6107499190610ac1565b6107539190610b24565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360026107a261053c565b6107ac9190610ac1565b6107b69190610b24565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108038585610579565b92505050610905565b6000810361081e578392505050610905565b60018103610830578492505050610905565b6003600161083c61053c565b6108469190610ac1565b6108509190610b24565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600261089f61053c565b6108a99190610ac1565b6108b39190610b24565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109008585610579565b925050505b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061093b82610910565b9050919050565b61094b81610930565b811461095657600080fd5b50565b60008135905061096881610942565b92915050565b6000602082840312156109845761098361090b565b5b600061099284828501610959565b91505092915050565b6000819050919050565b6109ae8161099b565b82525050565b60006020820190506109c960008301846109a5565b92915050565b6109d88161099b565b81146109e357600080fd5b50565b6000813590506109f5816109cf565b92915050565b600060208284031215610a1157610a1061090b565b5b6000610a1f848285016109e6565b91505092915050565b610a3181610930565b82525050565b6000602082019050610a4c6000830184610a28565b92915050565b60008060408385031215610a6957610a6861090b565b5b6000610a7785828601610959565b9250506020610a8885828601610959565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610acc8261099b565b9150610ad78361099b565b9250828201905080821115610aef57610aee610a92565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b2f8261099b565b9150610b3a8361099b565b925082610b4a57610b49610af5565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b610b9f610b9a8261099b565b610b84565b82525050565b6000610bb18284610b8e565b6020820191508190509291505056fea26469706673582212207706a94f4487d45f20794e19e937b6176740e0a9184d2a99e7e8744a482f859264736f6c63430008130033";

type TourneyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TourneyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tourney__factory extends ContractFactory {
  constructor(...args: TourneyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ad1: AddressLike,
    ad2: AddressLike,
    ad3: AddressLike,
    ad4: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ad1, ad2, ad3, ad4, overrides || {});
  }
  override deploy(
    ad1: AddressLike,
    ad2: AddressLike,
    ad3: AddressLike,
    ad4: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ad1, ad2, ad3, ad4, overrides || {}) as Promise<
      Tourney & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Tourney__factory {
    return super.connect(runner) as Tourney__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TourneyInterface {
    return new Interface(_abi) as TourneyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Tourney {
    return new Contract(address, _abi, runner) as unknown as Tourney;
  }
}

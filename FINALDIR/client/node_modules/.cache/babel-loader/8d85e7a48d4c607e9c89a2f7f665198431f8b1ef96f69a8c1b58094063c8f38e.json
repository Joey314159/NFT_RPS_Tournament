{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Developer/RockPaperScissorEmulator/client/src/components/GetNFTOwnerButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getNFTOwner } from \"../utils/contractServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  backgroundColor: 'rgb(153, 153, 153)',\n  color: 'black',\n  padding: '20px 40px',\n  borderRadius: '5px',\n  border: '2px',\n  marginRight: '100px'\n};\nlet tokenId;\nfunction getNFTOwnerButton() {\n  _s();\n  const [id, setId] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    getNFTOwnerG(id);\n    console.log(\"Token ID Sent!\");\n  };\n  const handleChange = event => {\n    setId(event.target.value);\n  };\n  const getNFTOwnerG = async tokenId => {\n    try {\n      await getNFTOwner(tokenId);\n    } catch (error) {\n      console.error(\"Can not retrieve owner of this nft\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Token ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(getNFTOwnerButton, \"HQhLVNjveXBilLE1Zdd8jTOIPME=\");\nexport default getNFTOwnerButton;","map":{"version":3,"names":["React","useState","getNFTOwner","jsxDEV","_jsxDEV","styles","backgroundColor","color","padding","borderRadius","border","marginRight","tokenId","getNFTOwnerButton","_s","id","setId","handleSubmit","event","preventDefault","getNFTOwnerG","console","log","handleChange","target","value","error","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ray/Developer/RockPaperScissorEmulator/client/src/components/GetNFTOwnerButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getNFTOwner } from \"../utils/contractServices\";\n\nconst styles = {\n    backgroundColor: 'rgb(153, 153, 153)',\n    color: 'black',\n    padding: '20px 40px',\n    borderRadius: '5px',\n    border: '2px',\n    marginRight: '100px'\n};\n\nlet tokenId;\n\n\n\nfunction getNFTOwnerButton() {\n    const [id, setId] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        getNFTOwnerG(id);\n        console.log(\"Token ID Sent!\");\n    };\n\n    const handleChange = (event) => {\n        setId(event.target.value);\n    };\n    \n    const getNFTOwnerG = async (tokenId) => {\n        try {\n            await getNFTOwner(tokenId);\n        }\n        catch (error) {\n            console.error(\"Can not retrieve owner of this nft\", error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>Enter Token ID:\n                <input type=\"text\" value={id} onChange={handleChange}/>\n            </label>\n            <button type=\"submit\">Submit</button>\n\n        </form>\n        );\n}\n\nexport default getNFTOwnerButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,MAAM,GAAG;EACXC,eAAe,EAAE,oBAAoB;EACrCC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,WAAW;EACpBC,YAAY,EAAE,KAAK;EACnBC,MAAM,EAAE,KAAK;EACbC,WAAW,EAAE;AACjB,CAAC;AAED,IAAIC,OAAO;AAIX,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAMgB,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,YAAY,CAACL,EAAE,CAAC;IAChBM,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACjC,CAAC;EAED,MAAMC,YAAY,GAAIL,KAAK,IAAK;IAC5BF,KAAK,CAACE,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAML,YAAY,GAAG,MAAOR,OAAO,IAAK;IACpC,IAAI;MACA,MAAMV,WAAW,CAACU,OAAO,CAAC;IAC9B,CAAC,CACD,OAAOc,KAAK,EAAE;MACVL,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC9D;EACJ,CAAC;EAED,oBACItB,OAAA;IAAMuB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBACzBxB,OAAA;MAAAwB,QAAA,GAAO,iBACH,eAAAxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACJ,KAAK,EAAEV,EAAG;QAACe,QAAQ,EAAEP;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACR9B,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnC,CAAC;AAEf;AAACpB,EAAA,CA/BQD,iBAAiB;AAiC1B,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}